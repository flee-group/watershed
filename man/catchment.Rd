% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catchment.R
\name{catchment}
\alias{catchment}
\title{Catchment
Compute catchment area or catchment spatial objects from delineated streams}
\usage{
catchment(
  x,
  type = c("outlet", "reach", "points", "pixel"),
  y,
  area = TRUE,
  Tp
)
}
\arguments{
\item{x}{A \link[terra:SpatRaster-class]{terra::SpatRaster} stack, such as one created by \code{\link[=delineate]{delineate()}}.}

\item{type}{The scale at which to compute catchments, see 'details'}

\item{y}{Matrix, 2-columns, giving coordinates at which to compute the catchments}

\item{area}{boolean, if \code{TRUE} returns the catchment area, if \code{FALSE} returns a raster}

\item{Tp}{Optional topology, used if type != "points", will be computed if not provided}
}
\value{
A \link[terra:SpatRaster-class]{terra::SpatRaster} if \code{area == FALSE}, otherwise a vector of catchment areas
}
\description{
Catchment
Compute catchment area or catchment spatial objects from delineated streams
}
\details{
The type parameter controls how many catchments/catchment areas are computed
(and how long the function will take).
\itemize{
\item \code{'outlet'}: Compute only for the outlet of the entire network
\item \code{'reach'}: Compute one catchment area per reach, computed at the bottom of the reach
\item \code{'points'}: Compute catchment for user-specified points, given by the \code{y} parameter
\item \code{'pixel'}: Compute catchment area for each pixel; this can take a very long time
}
}
\examples{
\donttest{
    data(kamp_dem)
    x = delineate(kamp_dem)
    catchment(x)
}
}
